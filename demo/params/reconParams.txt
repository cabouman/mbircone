reconParams.txt: This file can be modified by the user


################################################################ Miscellaneous #############
[InitVal_recon] Initialization value (mm-1)
0

[initReconMode] 'constant':{use InitVal_recon}, 'recon':{reads recon}, 'FDK':{like recon but performs FDK before init}
constant
recon
FDK

################################################################ Prior Model stuff #########
[priorWeight_QGGMRF] Weight of [1/2 ||y-Ax||^2_W] term. Skips computation if weight < 0. 
1

[priorWeight_proxMap] Weight of [1/(2 sigma_lambda^2) ||x-x~||^2] term. Skips computation if weight < 0. 
-1

[is_positivity_constraint] (1: positivity constraint on, 0: positivity constraint off )
1
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . QGGMRF . . . . . . . . . . .
[isTGGMRF] (1: Converts QGGMRF->TGGMRF) (0: Uses QGGMRF)
1

[q] QGGMRF parameter (q>1, typical choice q=2)
2

[p] QGGMRF parameter (1<=p<q)
1.2

[T] QGGMRF parameter 		(=eps TGGMRF parameter)
0.5

[sigmaX] QGGMRF parameter	(=s TGGMRF parameter)
0.1

[bFace] relative neighbor weight: 6 cube faces 			(Computation when #>=0, omitting when #<0)
1.0
-1

[bEdge] relative neighbor weight: 12 cube edges 		(Computation when #>=0, omitting when #<0)
0.70710678118
-1

[bVertex] relative neighbor weight: 8 cube vertices 	(Computation when #>=0, omitting when #<0)
0.57735026919
-1
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Proximal Mapping . . . . . .
[sigma_lambda] Proximal mapping scaler
1
################################################################ Stopping Conditions #######
[stopThresholdChange_pct] stop threshold image change (%)
0.00

[stopThesholdRWFE_pct] stop threshold relative weighted forward error (%)
0

[stopThesholdRUFE_pct] stop threshold relative unweighted forward error (%)
0

[stopThesholdRRMSE_pct] stop threshold relative RMSE (x,x0) (%) (only works when phantom present)
0

[MaxIterations] maximum number of iterations
20
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .  Relative Change Computation . . .
[relativeChangeMode] 'meanImage' or 'fixedScaler' 'percentile'. If 'meanImage':	change=avg(change)/avg(x(x changed))
percentile

[relativeChangeScaler] 		used if relativeChangeMode=='fixedScaler': 			change=avg(change)/fixedScaler
0.1

[relativeChangePercentile] 	used if relativeChangeMode=='percentile': 			change=avg(change)/prctile(x(1:D:end),relativeChangePercentile)
99.9
################################################################ Intermediate saving #######
[downsampleFactorSino] 
20

[downsampleFactorRecon]
20

[downsampleFNamePrefix] 
Downsampled/DS_
################################################################ Zipline Stuff #############
[zipLineMode] (0: off, 1: conventional Zipline, 2: randomized Zipline, 3: Super Voxel ZL)
2

[N_G] Number of groups for group ICD
2

[numVoxelsPerZiplineMax] ziplines will have ceil(N_z/ceil(N_z/#)) voxels
200

################################################################ Parallel stuff ############
[numThreads] Number of threads
20
################################################################ Weight Scaler  ############
[weightScaler_domain] "spatiallyVariant", "spatiallyInvariant"
spatiallyInvariant
spatiallyVariant

[weightScaler_estimateMode] 'None', "errorSino", "avgWghtRecon" (only when "spatiallyInvariant")
avgWghtRecon
None
errorSino

[weightScaler_value] User specified weight scaler (only when 'spatiallyInvariant' and 'None')
1
################################################################ NHICD          ############
[NHICD_Mode] 'off' 'percentile+random'
off

[NHICD_ThresholdAllVoxels_ErrorPercent] when error greater then all voxels are updated
80

[NHICD_percentage] lastChange>prctile(lastChange, 100-#) is updated
15

[NHICD_random] approx #% of remaining voxels are updated randomly
20

################################################################ Misc           ############
[verbosity] 0: minimal output, 1: medium output, 2: more, 3: maximum output
0

[isComputeCost]
1

[isPhantomReconReference]
0

[backprojlike_type] proj, entropy, kappa
proj
############################################################################################

